
/* ======================================== */
/*    程式实例: 5_11.h                       */
/*    使用数组来构建环状队列                    */
/* ======================================== */
#include "btree.h"

// 层次遍历 4 层满二叉树，最后一层 8 个结点
#define MAXNODE (8+1) /* 队列的实际有效容量: MAXQUEUE-1 */

struct node_queue
{
    btree nodes[MAXNODE]; /* 队列的数组宣告       */
    int front;            /* 队列的前端, de(++f) */
    int rear;             /* 队列的后端, en(++r) */
    int debug;            /* 调试日志输出开关     */
};

/* ---------------------------------------- */
/*  启用队列的调试日志输出开关                   */
/* ---------------------------------------- */
void debugqueue(struct node_queue *que, int debug);

/* ---------------------------------------- */
/*  初始化队列空队列                           */
/* ---------------------------------------- */
void initqueue(struct node_queue *que);

/* ---------------------------------------- */
/*  判断队列是否为空                           */
/* ---------------------------------------- */
int isemptyqueue(struct node_queue *que);

/* ---------------------------------------- */
/*  队列资料的存入(appendNode)                 */
/* ---------------------------------------- */
int enqueue(struct node_queue *que, btree node);

/* ---------------------------------------- */
/*  队列资料的取出                            */
/* ---------------------------------------- */
btree dequeue(struct node_queue *que);

/* ---------------------------------------- */
/*  排干清空队列                              */
/* ---------------------------------------- */
void drainqueue(struct node_queue *que);

/* ---------------------------------------- */
/*  拷贝队列元素                              */
/* ---------------------------------------- */
void movequeue(struct node_queue *dstque,
               struct node_queue *srcque);
